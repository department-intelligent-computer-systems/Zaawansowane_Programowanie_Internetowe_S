{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./wybieranie.service\";\nimport * as i2 from \"./wyswietlanie.service\";\nexport class UsuwanieService {\n  constructor(wybranySerwis, wyswietlanySerwis) {\n    this.wybranySerwis = wybranySerwis;\n    this.wyswietlanySerwis = wyswietlanySerwis;\n    // Nowa lista studentow \n    this.ListaStudentow = new BehaviorSubject([]);\n    //Tak samo jak przy wybieraniu, wybrany student\n    this.student = this.wybranySerwis.wybrany$;\n    this.list = this.wyswietlanySerwis.listaStudentow$;\n    this.list.subscribe(this.ListaStudentow);\n  }\n  deleteStudent(student) {\n    // filtrowanie tablicy studentow i tworzenie nowej bez wybranego wczesniej\n    this.wyswietlanySerwis.listaStudentow.next(this.ListaStudentow.value.filter(e => e.id !== e.id));\n    // Chyba usuwanie studenta o podanym id\n    this.wybranySerwis.student.next(this.student);\n  }\n  static #_ = this.ɵfac = function UsuwanieService_Factory(t) {\n    return new (t || UsuwanieService)(i0.ɵɵinject(i1.WybieranieService), i0.ɵɵinject(i2.WyswietlanieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuwanieService,\n    factory: UsuwanieService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","UsuwanieService","constructor","wybranySerwis","wyswietlanySerwis","ListaStudentow","student","wybrany$","list","listaStudentow$","subscribe","deleteStudent","listaStudentow","next","value","filter","e","id","_","i0","ɵɵinject","i1","WybieranieService","i2","WyswietlanieService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Studia\\ZIP\\Zaawansowane_Programowanie_Internetowe_S\\Lab1\\src\\Ang1\\Ang1\\src\\app\\Serwis\\usuwanie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Student } from '../Model/Student';\nimport { BehaviorSubject } from 'rxjs';\nimport { WybieranieService } from './wybieranie.service';\nimport { WyswietlanieService } from './wyswietlanie.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuwanieService {\n // wybrany student typu każdego\n  student:any;\n// Lista studentow jako obiekt obserwowalny\n  list:Observable<Student[]>;\n// Nowa lista studentow \n  ListaStudentow = new BehaviorSubject<Student[]>([]);\n\n  constructor(public wybranySerwis:WybieranieService, public wyswietlanySerwis:WyswietlanieService) {\n    //Tak samo jak przy wybieraniu, wybrany student\n    this.student = this.wybranySerwis.wybrany$;\n\n    this.list = this.wyswietlanySerwis.listaStudentow$;\n    this.list.subscribe(this.ListaStudentow)\n   }\n\n   deleteStudent(student:Student){\n    // filtrowanie tablicy studentow i tworzenie nowej bez wybranego wczesniej\n    this.wyswietlanySerwis.listaStudentow.next(this.ListaStudentow.value.filter(e => e.id !== e.id));\n    // Chyba usuwanie studenta o podanym id\n    this.wybranySerwis.student.next(this.student);\n   }\n}\n"],"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;;;AAOtC,OAAM,MAAOC,eAAe;EAQ1BC,YAAmBC,aAA+B,EAASC,iBAAqC;IAA7E,KAAAD,aAAa,GAAbA,aAAa;IAA2B,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAH9E;IACE,KAAAC,cAAc,GAAG,IAAIL,eAAe,CAAY,EAAE,CAAC;IAGjD;IACA,IAAI,CAACM,OAAO,GAAG,IAAI,CAACH,aAAa,CAACI,QAAQ;IAE1C,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,iBAAiB,CAACK,eAAe;IAClD,IAAI,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACL,cAAc,CAAC;EACzC;EAEAM,aAAaA,CAACL,OAAe;IAC5B;IACA,IAAI,CAACF,iBAAiB,CAACQ,cAAc,CAACC,IAAI,CAAC,IAAI,CAACR,cAAc,CAACS,KAAK,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKD,CAAC,CAACC,EAAE,CAAC,CAAC;IAChG;IACA,IAAI,CAACd,aAAa,CAACG,OAAO,CAACO,IAAI,CAAC,IAAI,CAACP,OAAO,CAAC;EAC9C;EAAC,QAAAY,CAAA,G;qBArBSjB,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfxB,eAAe;IAAAyB,OAAA,EAAfzB,eAAe,CAAA0B,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}